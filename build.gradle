/*
 * Copyright 2023-2025 wcaokaze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
   alias libs.plugins.kotlin.multiplatform apply false
   alias libs.plugins.android.application apply false
   alias libs.plugins.android.library apply false
   alias libs.plugins.compose.jb apply false
   alias libs.plugins.compose.compiler apply false
   alias libs.plugins.roborazzi apply false
}

static def isXterm() {
   def term = System.getenv('TERM')
   if (term == null) { return false }
   return term.startsWith('xterm')
}

subprojects {
   tasks.register('cargoJniTestBuild', Exec) {
      workingDir rootProject.projectDir

      def args = ['+nightly', 'build', '--features', 'jni-test mock']
      if (isXterm()) {
         args += '--color=always'
      }
      commandLine('cargo', *args)
   }

   tasks.configureEach { task ->
      if (task.name.contains('compileTestKotlin')
         && ['Jvm', 'Desktop', 'Android'].any { task.name.contains(it) }
      ) {
         task.dependsOn 'cargoJniTestBuild'
      }

      if (task.name.matches(/test(Debug|Release)UnitTest/) ||
          task.name.matches(/jvmTest/))
      {
         task.outputs.upToDateWhen { false }
      }
   }
}
