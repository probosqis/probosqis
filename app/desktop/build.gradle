/*
 * Copyright 2023-2024 wcaokaze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
   alias libs.plugins.kotlin.multiplatform
   alias libs.plugins.kotlinx.serialization
   alias libs.plugins.compose.jb
}

apply from: rootProject.file('gradle/setupModule.gradle')

compose.desktop {
   application {
      mainClass = "com.wcaokaze.probosqis.Main"
   }
}

kotlin {
   sourceSets {
      desktopMain.dependencies {
         implementation compose.desktop.linux_x64
         implementation project(':panoptiqon')
         implementation project(':panoptiqon-compose')
         implementation project(':capsiqum-page')
         implementation project(':capsiqum-deck')
         implementation project(':capsiqum-transition')
         implementation project(':modules:app')
         implementation project(':modules:error')
         implementation project(':modules:page')
         implementation project(':modules:pagedeck')
         implementation project(':modules:testpages')
         implementation project(':modules:resources')
      }
   }
}

tasks.register('cargoBuild', Exec) {
   workingDir rootProject.projectDir

   def args = ['+nightly', 'build']
   if (isXterm()) {
      args += '--color=always'
   }
   commandLine('cargo', *args)
}

tasks.register('cargoTest', Exec) {
   workingDir rootProject.projectDir

   def args = ['+nightly', 'test']
   if (isXterm()) {
      args += '--color=always'
   }
   commandLine('cargo', *args)
}

tasks.configureEach { task ->
   if (task.name.contains('compileKotlinDesktop')) {
      task.dependsOn 'cargoBuild'
   }
   if (task.name.contains('desktopTestClasses')) {
      task.dependsOn 'cargoTest'
   }
}
