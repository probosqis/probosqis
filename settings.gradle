/*
 * Copyright 2023-2024 wcaokaze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

pluginManagement {
   repositories {
      gradlePluginPortal()
      google()
      mavenCentral()
      maven { url 'https://maven.pkg.jetbrains.space/public/p/compose/dev' }
      maven { url 'https://plugins.gradle.org/m2/' }
   }
}

dependencyResolutionManagement {
   repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
   repositories {
      google()
      mavenCentral()
      maven { url 'https://maven.pkg.jetbrains.space/public/p/compose/dev' }
   }

   versionCatalogs {
      libs {
         version('kotlin', '2.0.20')
         version('rust-android-plugin', '0.9.4')
         version('android-plugin', '8.5.0')
         version('android-ndk', '27.1.12297006')
         version('compose-jb', '1.6.11')
         version('compose-androidx', '1.6.8')
         version('compose-compiler', '1.5.15')
         version('compose-material3', '1.2.1')
         version('accompanist', '0.34.0')
         version('koin', '3.5.6')
         version('roborazzi', '1.26.0')

         plugin('kotlin-multiplatform', 'org.jetbrains.kotlin.multiplatform').versionRef('kotlin')
         plugin('rust-android', 'org.mozilla.rust-android-gradle.rust-android').versionRef('rust-android-plugin')
         plugin('android-application', 'com.android.application').versionRef('android-plugin')
         plugin('android-library', 'com.android.library').versionRef('android-plugin')
         plugin('compose-jb', 'org.jetbrains.compose').versionRef('compose-jb')
         plugin('compose-compiler', 'org.jetbrains.kotlin.plugin.compose').versionRef('kotlin')
         plugin('kotlinx-serialization', 'org.jetbrains.kotlin.plugin.serialization').versionRef('kotlin')
         plugin('roborazzi', 'io.github.takahirom.roborazzi').versionRef('roborazzi')

         library('kotlinx-collections-immutable', 'org.jetbrains.kotlinx', 'kotlinx-collections-immutable').version('0.3.8')
         library('kotlinx-datetime', 'org.jetbrains.kotlinx', 'kotlinx-datetime').version('0.6.1')
         library('androidx-annotation', 'androidx.annotation', 'annotation').version('1.8.2')

         library('android-desugaring-jdk', 'com.android.tools', 'desugar_jdk_libs').version('2.1.2')

         library('androidx-activity-compose', 'androidx.activity', 'activity-compose').version('1.8.2')
         library('androidx-compose-material3-window-size', 'androidx.compose.material3', 'material3-window-size-class').versionRef('compose-material3')
         library('accompanist-pager', 'com.google.accompanist', 'accompanist-pager').versionRef('accompanist')

         library('kotlinx-serialization', 'org.jetbrains.kotlinx', 'kotlinx-serialization-json').version('1.6.2')

         library('koin-core', 'io.insert-koin', 'koin-core').versionRef('koin')
         library('koin-android', 'io.insert-koin', 'koin-android').versionRef('koin')
         library('koin-compose', 'io.insert-koin', 'koin-compose').version('1.1.5')

         library('kotlin-test-junit', 'org.jetbrains.kotlin', 'kotlin-test-junit').versionRef('kotlin')
         library('mockk', 'io.mockk', 'mockk').version('1.13.12')
         library('robolectric', 'org.robolectric', 'robolectric').version('4.13')
         library('roborazzi-core', 'io.github.takahirom.roborazzi', 'roborazzi').versionRef('roborazzi')
         library('roborazzi-compose', 'io.github.takahirom.roborazzi', 'roborazzi-compose').versionRef('roborazzi')
         library('androidx-test-ext', 'androidx.test.ext', 'junit').version('1.2.1')
         library('compose-ui-test-manifest', 'androidx.compose.ui', 'ui-test-manifest').versionRef('compose-androidx')
      }
   }
}

void includeSubmodule(String moduleName, String projectDir) {
   include moduleName
   project(moduleName).projectDir = file(projectDir)
}

rootProject.name = "Probosqis"
include ':app:android'
include ':app:desktop'
// include ':app:js'
includeSubmodule ':panoptiqon', 'modules/panoptiqon/panoptiqon'
includeSubmodule ':panoptiqon-compose', 'modules/panoptiqon/panoptiqon-compose'
includeSubmodule ':capsiqum-page', 'modules/capsiqum/capsiqum-page'
includeSubmodule ':capsiqum-deck', 'modules/capsiqum/capsiqum-deck'
includeSubmodule ':capsiqum-transition', 'modules/capsiqum/capsiqum-transition'
include ':modules:app'
include ':modules:error'
include ':modules:ext:kotlin'
include ':modules:ext:kotlinTest'
include ':modules:ext:android'
include ':modules:ext:compose'
include ':modules:ext:panoptiqon'
include ':modules:mastodon:entity'
include ':modules:mastodon:repository'
include ':modules:page'
include ':modules:pagedeck'
include ':modules:resources'
include ':modules:testpages'
