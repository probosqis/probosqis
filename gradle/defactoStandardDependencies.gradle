/*
 * Copyright 2023 wcaokaze
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

boolean hasPlugin(Provider<? extends PluginDependency> plugin) {
   return project.pluginManager.hasPlugin(plugin.get().pluginId)
}

def isAndroidModule = hasPlugin(libs.plugins.android.application)
                   || hasPlugin(libs.plugins.android.library)
def isComposeModule = hasPlugin(libs.plugins.compose)
def isExtModule = project.path.contains(':modules:ext')

kotlin {
   sourceSets {
      commonMain.dependencies {
         implementation libs.kotlinx.datetime
         implementation libs.kotlinx.serialization
         implementation libs.kotlinx.collections.immutable
      }

      commonTest.dependencies {
         implementation libs.kotlin.test
         implementation libs.mockk
      }

      if (isAndroidModule) {
         androidMain.dependencies {
         }

         androidAndroidTest.dependencies {
            implementation libs.androidx.test.ext
            implementation libs.androidx.test.espresso
         }
      }

      if (isComposeModule) {
         commonMain.dependencies {
            implementation compose.material
         }

         jvmMain.dependencies {
            implementation compose.uiTooling
            implementation compose.preview
         }

         jvmTest.dependencies {
            implementation compose.desktop.currentOs
            implementation compose.uiTestJUnit4
         }
      }

      if (isAndroidModule && isComposeModule) {
         androidMain.dependencies {
            implementation libs.androidx.activity.compose
            implementation compose.uiTooling
            implementation compose.preview
         }
      }

      if (!isExtModule) {
         commonMain.dependencies {
            implementation project(':modules:ext:kotlin')
         }

         commonTest.dependencies {
            implementation project(':modules:ext:kotlinTest')
         }

         if (isAndroidModule) {
            commonMain.dependencies {
               implementation project(':modules:ext:android')
            }
         }

         if (isComposeModule) {
            commonMain.dependencies {
               implementation project(':modules:ext:compose')
            }
         }
      }
   }
}
